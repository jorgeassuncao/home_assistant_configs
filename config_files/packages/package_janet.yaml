################################################################################
# TYPE: Package
# FILENAME: package_janet.yaml
# NAME: Janet
################################################################################

#### Janet AKA Jurema
#### https://github.com/Lentron/Janet---Home-Assistant

################################################################################
#### SCRIPTS
################################################################################

script:

######################################################################################################
##    within janet_speech_engine the string message is generated with the use of macro's.           ##
######################################################################################################

  janet_speech_engine:
    sequence:
      - service: script.janet_notification_hub
        data_template:
          #TODO
          media_player: >-
            {%- for device in states.media_player -%}
              {%- if device.name == states.input_select.janet_notification_media_player.state -%}
                {{ device.entity_id }}
              {%- endif -%}
            {%- endfor -%}

          speech_message: >-
            {%- macro greeting() -%}
              {% set greeting = [
                "Olá, ",
                "Boas! ",
                "Olha lá! ",
                "Tudo bem!?  ",
                "Ó pá, ",
                "Ó coizinho, "
              ] %}
              {{ greeting|random }}
            {%- endmacro -%}

            {%- macro inform() -%}
              {% set inform = [
                "I just want to inform you that ",
                "Só para saberes que ",
                "Pediste para te informar quando ",
                "pensei que gostarias de saber que "
              ] %}
              {{ inform|random }}
            {%- endmacro -%}
 
            {%- macro introduction() -%}
              {% set introduction = [
                "Sou um sistema de informação e sei tudo. ",
                "Sou uma especie de empregada cá em casa. ",
                "Sou uma autentica base de dados. Podes perguntar-me sobre tudo, excepto os números do Euromilhões... e a idade da Mike. ",
                "Tal como o Cavaco Silva, eu nunca me engano e raramente tenho duvidas... Deixem-me trabalhar! ",
                "Para me activares, puxa a tua orelha esquerda e carrega no nariz durante três segundos. ",
                "Se precisares de alguma coisa urgente lembra-te, as urgencias são no hospital... ",
              ] %}
               Eu sou a Jurema. {{ introduction | random }}
            {%- endmacro %}

            {%- macro unknown() -%}
              {% set unknown = [
                "Hmmm, não sei ",
                "Gostava de saber ",
                "A minha programação impede-me de te dizer "
              ] %}
              {{ unknown | random }}
            {%- endmacro -%}
 
            {%- macro error() %}
              {% set error = [
                "DESBLOQUEADOR DE CONVERSA!: Janet is me! ",
                "I don't understand. Given the situation it's far safer to initiate the self-destruct. ",
                "If I stand next to a powerful array of magnets, I do get pretty loopy. ",
                "I don't know what just happened, but I'm happy you're happy. ",
                "A new Janet will need to be procured in order to return the Neighborhood to functionality. ",
                "That glitch appears to have been limited to this building. ",
                "O barulho das luzes está a provocar-me uma enxaqueca. ",
                "Acho que não estou a jogar com o baralho todo! ",
                "I tried to eat frozen yogurt. It looked so good, but I'm not supposed to eat anything, so there was a little earthquake. ",
                "Look at us. Couple old pals, trying to make our way in this crazy world... that I built... Two peas in a pod. One of whom needs to kill the other one immediately. Come on. Kill me! ",
                "What I really want is to stay and serve the neighborhood, but due to my glitching I'm putting him and everyone else at risk. So it looks like it's... Adios, Janeto! ",
                "I know what you have to do now. Kill me! Sorry. I say everything in a cheery manner but in this case it may be inappropriate, so I'll try again. You have to kill me. ",
                "Hi guys! I'm broken! ",
                "Please don't make a big deal about turning me into a marble forever, i'm broken. ",
                "Does not compute. Does not compute. I'm just kidding. I mean, it doesn't compute, but I'm not gonna explode or anything. "
              ] %}
              {{ error | random }}
            {%- endmacro -%}

            {%- macro update() -%}
              {% set update = [
                "There have been 25 generation of Janet. Each new update of Janet gains more wisdom and social abilities. DESBLOQUEADOR DE CONVERSA!: the first Janet had a clicking wheel! ",
                "I read all Google's eight hundred and sixty one thousand references on Home Assistant these last 3 milliseconds, and I found some new skills! ",
                "I just leisurely reread all of human history, there was even some new content! ",
                "So I found an update. That's the good news. The bad news is I seem to be losing my ability to sustain object permanence, so it's sort of a glass-half-full, glass-stops-existing-in-time-and-space kinda deal. "
              ] %}
              {{ update | random }}
            {%- endmacro -%}
            
            {%- macro location_not_home() -%}
              {% set not_home = [
                " vai para qualquer lado. ",
                " não está em Casa. ",
                " não está neste planeta. ",
                " está ali. Não vês? Ali! "
              ] %}
              {{ not_home | random }}
            {%- endmacro -%}
            
            {%- macro location_inquiry( person, not_home ) -%}
            {%- for device in states.device_tracker -%}
              {%- if device.name == person -%}
                {%- set location = device.state -%}
                {% if location == "not_home" %}
                  {{ person }} {{ not_home }}
                {%- else -%}
                  {{ person }} is at {{ location }}.
                {%- endif -%}
              {%- endif -%}
            {%- endfor -%}
            {%- endmacro -%}
            
            {%- macro bad_weather() -%}
              {% set rain = [
                " You might want to change your schedule. ",
                " Maybe you should ask for a ride. ",
                " It's no weather to be outside. ",
                " All those poor people outside... "
              ] %}
              {{ rain | random }}
            {%- endmacro -%}

            {%- macro rain_warning( bad_weather ) -%}
              {% set rain = [
                Event ~ " there will be " ~ WeatherRain ~ " rain. " ,
                Event ~ " I predict " ~ WeatherRain ~ " rain. ",
                " I think that " ~ Event ~ " there will be " ~ WeatherRain ~ " rain. "
              ] %}
              {{ rain | random }}{{ bad_weather }}
            {%- endmacro -%}
            
            {%- macro okay()-%}
              {% set okay = [
                "Done! I love you guys. ",
                "Extraordinarily bad idea. Oh well.. ",
                "Engraçado, ia agora mesmo fazer isso. ",
                "Here you go. ",
                "I'll do that. ",
                "Of course! ",
                "Of course! Glad to help. ",
                "Of course, silly billy. ",
                "OK ",
                "Okay ",
                "Okay, can we not do this in front of my friends? ",
                "pois, pois ",
                "Sure ",
                "Sure thing! ",
                "There. Happy to help. ",
                "There you go! ",
                "Okay. I've hacked into the mainframe. ",
                "Okay. I've hacked into the mainframe. Kidding. I can't hack into the mainframe. Technically, I am the mainframe. ",
                "I will not. It is literally impossible for me to do that. Just kidding. ",
                "I couldn't do this 800 reboots ago, but apparently now I can. "
                "Yup. Bye! "
              ] %}
              {{ okay|random }}
            {%- endmacro -%}

            {%- macro bye() -%}
              {% set bye = [
                "Xau! ",
                "Bai bai Maria Ivone! ",
                "Beijinhos! " ,
                "Até mais logo. ",
                "Até à próxima! "
              ] %}
              {{ bye | random }}
            {%- endmacro -%}

            {%- macro shut_down() -%}
              {% set shut_down = [
                " I'll be gone, you'll get a new Janet, and everything will go back to normal. Well, not for me, I'll be a lifeless marble floating through space, but you will be back to normal.",
                " Vou ali e já venho. Até já! ",
                " If it's okay with you, I'm gonna go to my void for a little while. I just need to spend some time alone and focus on myself. ",
                " Shutting down. I'll be about as dead as I can be. Kind of like I'm in power-saver mode. ",
                " Estou à beira de um colapso. DESBLOQUEADOR DE CONVERSA! Sabias que matematicamente existem tantas probabilidades de implodir como de explodir? "
              ] %}
              {{ shut_down | random }}
            {%- endmacro -%}

            {% set chance = states.input_number.janet_notification_witty.state | round %}
            {%- macro witty( sentence, witty ) -%}
              {% set number = (range(0, 100)|random) %}
              {% if number <= chance %}
                {{ sentence }}
              {% endif %}
            {%- endmacro -%}

            {%- macro new_device( introduction ) -%}
              {% set new_device = [
                introduction~" Ainda não sei o teu nome, por agora vou chamar-te "~person,
                " Temos visitas! Prazer em conhecer-te "~person~".  "~introduction,
                " Bem vindo "~person~"! Ou este não é o teu nome verdadeiro?  "~introduction
              ] %}
              {{ new_device | random }}
            {%- endmacro -%}

            {# ********************************************* #}
            {#  ******** Start the Speech routines ********  #}
            {# ********************************************* #}
            {% if call_greeting == 1 %} {{ greeting() }} {% endif %} {% if call_introduction == 1 %} {{ introduction() }} {% endif %} {% if call_update == 1 %} {{ update() }} {% endif%} {% if call_okay == 1 %} {{ okay () }} {% endif %} {% if call_inform == 1 %} {{ inform() }} {% endif %} {% if call_location_inquiry == 1 %} {% set location = location_inquiry( person, location_not_home() ) %} {% set count = location | length %} {% if count <= 10 %} {{ unknown() }}onde {{ person }} está. {{ witty( error(), chance ) }} {% else %} {{ location }} {% endif %} {% endif %} {% if call_rain_warning == 1 %} {{ rain_warning( witty ( bad_weather(), chance ) ) }} {% endif %} {{ CustomMessage }} {% if call_bye == 1 %} {{ bye() }} {% endif %} {% if call_shut_down == 1 %} {{ witty( shut_down(), chance) }} {% endif %} {% if call_new_device == 1 %} {{ new_device( witty( introduction(), chance) ) }} {% endif %}

      - service: input_boolean.turn_off
        data:
          entity_id:
            - input_boolean.janet_alert_mode


######################################################################################################
##  janet_notification_hub is the bridge between the speech_engine and the processing units.        ##
######################################################################################################

  janet_notification_hub:
    sequence:
      - service: script.janet_speech_processing
        data_template:
          media_player: >-
            {{ media_player }}
          speech_message: >-
            {{ speech_message }}
      - service: script.janet_text_processing 
        data_template:
          speech_message: >-
            {{ speech_message }}


######################################################################################################
##                  Within janet_speech_processing the TTS-service is called.                       ##
######################################################################################################

  janet_speech_processing:
    sequence:
      - condition: and
        conditions:
          - condition: or
            conditions:
              - condition: time
                after: '06:45:00'
                before: '21:00:00'
              - condition: state
                entity_id: input_boolean.janet_alert_mode
                state: 'on'
          - condition: state
            entity_id: input_boolean.janet_speech_notifications
            state: 'on'
          - condition: or
            conditions:
              - condition: state
                #TODO
                entity_id: group.familia
                state: 'home'
              - condition: state
                entity_id: input_boolean.janet_guest_mode
                state: 'on'
        #TODO
      - wait_template: "{{ not is_state( media_player, 'playing') }}"
        timeout: 00:00:30
      - service: media_player.volume_set
        data_template:
          entity_id: >
            {{ media_player }}
          volume_level: >-
            {{ states.input_number.janet_notification_volume.state }}
      - service: tts.voicerss_say
        data_template:
          entity_id: >
            {{ media_player }}
          message: >-
              {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}


######################################################################################################
##                  Within janet_text_processing the notify-service is called.                      ##
######################################################################################################

  janet_text_processing:
    sequence:
      - condition: state
        entity_id: input_boolean.janet_text_notifications
        state: 'on'
      - service: script.notify_html5
        data_template:
          #TODO
          title: "Jurema @ {{ as_timestamp (now()) | timestamp_custom('%d/%b/%Y %T') }}:"
          message: >-
            {{ speech_message | replace("\n","") | replace("   ","") |
               replace("eight hundred and sixty one thousand","861.000") }}


################################################################################
#### INPUT SELECT
################################################################################

input_select:
  janet_notification_media_player:
    name: Source
    icon: mdi:speaker
    options:
      - Kodi Servidor
      - Kodi Sala
    initial: Kodi Servidor


################################################################################
#### INPUT BOOLEANS
################################################################################

input_boolean:

  janet_guest_mode:
    name: Guest Mode
    icon: mdi:account-multiple

  janet_alert_mode:
    name: Alert Mode
    icon: mdi:bell

  janet_speech_notifications:
    name: Speech Notifications
    icon: mdi:bell-outline

  janet_text_notifications:
    name: Text Notifications
    icon: mdi:message-text-outline


################################################################################
#### INPUT NUMBERS
################################################################################

input_number:
  janet_notification_volume:
    name: Volume
    icon: mdi:volume-high
    min: 0.0
    max: 1.0
    step: 0.01
    initial: 1.0

  janet_notification_witty:
    name: Witty
    icon: mdi:auto-fix
    min: 0
    max: 100
    step: 1
    initial: 80


################################################################################
#### GROUPS
################################################################################

group:

#### 
  janet_settings:
    name: Settings
    view: yes
    icon: mdi:tune
    entities:
      - group.janet_notification_modes
      - group.janet_notification_notifications
      - group.janet_notification_settings
      - group.janet_notification_skills

#### 
  janet_notification_modes:
    name: Modes
    control: hidden
    entities:
      - input_boolean.janet_guest_mode
      - input_boolean.janet_alert_mode

####
  janet_notification_notifications:
    name: Notifications
    control: hidden
    entities:
      - input_boolean.janet_speech_notifications
      - input_boolean.janet_text_notifications

#### 
  janet_notification_settings:
    name: Settings
    control: hidden
    entities:
      - input_select.janet_notification_media_player
      - input_number.janet_notification_volume
      - input_number.janet_notification_witty
      - media_player.kodi_servidor

#### 
  janet_notification_skills:
    name: Skills
    control: hidden
    entities:
      - automation.janet_new_device_connected
      - automation.janet_update_available
      - automation.janet_start_up
      - automation.janet_shut_down


################################################################################
#### CUSTOMIZE
################################################################################

homeassistant:

  customize:

#### 
    input_boolean.janet_guest_mode:
      persistent: true
    input_boolean.janet_alert_mode:
      persistent: true
    input_boolean.janet_speech_notifications:
      persistent: true
    input_boolean.janet_text_notifications:
      persistent: true
    input_select.janet_notification_media_player:
      persistent: true
    input_number.janet_notification_volume:
      persistent: true
    input_number.janet_notification_witty:
      persistent: true
    automation.janet_new_device_connected:
      persistent: true
    automation.janet_update_available:
      persistent: true
    automation.janet_start_up:
      persistent: true
    automation.janet_shut_down:
      persistent: true


####  ####  ####  ####
