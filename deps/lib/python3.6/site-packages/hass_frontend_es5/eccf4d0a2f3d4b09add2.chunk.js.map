{"version":3,"sources":["webpack:///./node_modules/preact/dist/preact.esm.js"],"names":["options","stack","EMPTY_CHILDREN","h","nodeName","attributes","lastSimple","child","simple","i","children","arguments","length","push","pop","String","p","key","vnode","extend","obj","props","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","IS_NON_DIMENSIONAL","items","enqueueRender","component","_dirty","debounceRendering","rerender","list","renderComponent","isNamedNode","node","normalizedNodeName","toLowerCase","getNodeProps","defaultProps","removeNode","parentNode","removeChild","setAccessor","name","old","value","isSvg","style","cssText","_typeof","test","innerHTML","__html","useCapture","replace","substring","addEventListener","eventProxy","removeEventListener","_listeners","e","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","className","this","type","event","mounts","diffLevel","isSvgMode","hydrating","flushMounts","c","afterMount","componentDidMount","diff","dom","context","mountAll","parent","componentRoot","ownerSVGElement","ret","idiff","out","prevSvgMode","splitText","_component","nodeValue","document","createTextNode","replaceChild","recollectNodeTree","__preactattr_","vnodeName","originalComponent","oldDom","isDirectOwner","_componentConstructor","isOwner","_parentComponent","constructor","setComponentProps","base","unmountComponent","createComponent","nextBase","createElementNS","createElement","firstChild","appendChild","fc","vchildren","a","nextSibling","isHydrating","j","f","vchild","originalChildren","childNodes","keyed","keyedLen","min","len","childrenLen","vlen","_child","__key","trim","insertBefore","dangerouslySetInnerHTML","attrs","unmountOnly","ref","removeChildren","lastChild","next","previousSibling","components","Ctor","inst","prototype","render","Component","doRender","splice","state","opts","_disable","__ref","componentWillMount","componentWillReceiveProps","prevContext","prevProps","syncComponentUpdates","isChild","rendered","cbase","previousProps","previousState","prevState","previousContext","isUpdate","initialBase","initialChildComponent","skip","shouldComponentUpdate","componentWillUpdate","getChildContext","toUnmount","childComponent","childProps","baseParent","componentRef","t","unshift","componentDidUpdate","afterUpdate","_renderCallbacks","beforeUnmount","componentWillUnmount","inner","merge","setState","callback","s","forceUpdate"],"mappings":"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","file":"eccf4d0a2f3d4b09add2.chunk.js","sourcesContent":["/** Virtual DOM Node */\nfunction VNode() {}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nvar options = {\n\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n  *\t@name syncComponentUpdates\n  *\t@type Boolean\n  *\t@default true\n  */\n\t//syncComponentUpdates: true,\n\n\t/** Processes all created VNodes.\n  *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n  */\n\t//vnode(vnode) { }\n\n\t/** Hook invoked after a component is mounted. */\n\t// afterMount(component) { }\n\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\n\t// afterUpdate(component) { }\n\n\t/** Hook invoked immediately before a component is unmounted. */\n\t// beforeUnmount(component) { }\n};\n\nvar stack = [];\n\nvar EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nfunction h(nodeName, attributes) {\n\tvar children = EMPTY_CHILDREN,\n\t    lastSimple,\n\t    child,\n\t    simple,\n\t    i;\n\tfor (i = arguments.length; i-- > 2;) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--;) {\n\t\t\t\tstack.push(child[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof child === 'boolean') child = null;\n\n\t\t\tif (simple = typeof nodeName !== 'function') {\n\t\t\t\tif (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t} else if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t} else {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tvar p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes == null ? undefined : attributes;\n\tp.key = attributes == null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode !== undefined) options.vnode(p);\n\n\treturn p;\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i];\n  }return obj;\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\nvar defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nfunction cloneElement(vnode, props) {\n  return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);\n}\n\n// DOM properties that should NOT have \"px\" added when numeric\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n/** Managed queue of dirty components to be re-rendered */\n\nvar items = [];\n\nfunction enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component) == 1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\nfunction rerender() {\n\tvar p,\n\t    list = items;\n\titems = [];\n\twhile (p = list.pop()) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nfunction isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined;\n  }\n  if (typeof vnode.nodeName === 'string') {\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName;\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nfunction isNamedNode(node, nodeName) {\n  return node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nfunction getNodeProps(vnode) {\n  var props = extend({}, vnode.attributes);\n  props.children = vnode.children;\n\n  var defaultProps = vnode.nodeName.defaultProps;\n  if (defaultProps !== undefined) {\n    for (var i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i];\n      }\n    }\n  }\n\n  return props;\n}\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nfunction createNode(nodeName, isSvg) {\n\tvar node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nfunction removeNode(node) {\n\tvar parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nfunction setAccessor(node, name, old, value, isSvg) {\n\tif (name === 'className') name = 'class';\n\n\tif (name === 'key') {\n\t\t// ignore\n\t} else if (name === 'ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t} else if (name === 'class' && !isSvg) {\n\t\tnode.className = value || '';\n\t} else if (name === 'style') {\n\t\tif (!value || typeof value === 'string' || typeof old === 'string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value === 'object') {\n\t\t\tif (typeof old !== 'string') {\n\t\t\t\tfor (var i in old) {\n\t\t\t\t\tif (!(i in value)) node.style[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i in value) {\n\t\t\t\tnode.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];\n\t\t\t}\n\t\t}\n\t} else if (name === 'dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t} else if (name[0] == 'o' && name[1] == 'n') {\n\t\tvar useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n\t\tsetProperty(node, name, value == null ? '' : value);\n\t\tif (value == null || value === false) node.removeAttribute(name);\n\t} else {\n\t\tvar ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''));\n\t\tif (value == null || value === false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);\n\t\t} else if (typeof value !== 'function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n\ttry {\n\t\tnode[name] = value;\n\t} catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nvar mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nvar diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nvar isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nvar hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nfunction flushMounts() {\n\tvar c;\n\twhile (c = mounts.pop()) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nfunction diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent != null && parent.ownerSVGElement !== undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom != null && !('__preactattr_' in dom);\n\t}\n\n\tvar ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode !== parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (! --diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tvar out = dom,\n\t    prevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode == null || typeof vnode === 'boolean') vnode = '';\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue != vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t} else {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout['__preactattr_'] = true;\n\n\t\treturn out;\n\t}\n\n\t// If the VNode represents a Component, perform a component diff:\n\tvar vnodeName = vnode.nodeName;\n\tif (typeof vnodeName === 'function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) {\n\t\t\t\tout.appendChild(dom.firstChild);\n\t\t\t} // if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\tvar fc = out.firstChild,\n\t    props = out['__preactattr_'],\n\t    vchildren = vnode.children;\n\n\tif (props == null) {\n\t\tprops = out['__preactattr_'] = {};\n\t\tfor (var a = out.attributes, i = a.length; i--;) {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t}\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {\n\t\tif (fc.nodeValue != vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc != null) {\n\t\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);\n\t\t}\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tvar originalChildren = dom.childNodes,\n\t    children = [],\n\t    keyed = {},\n\t    keyedLen = 0,\n\t    min = 0,\n\t    len = originalChildren.length,\n\t    childrenLen = 0,\n\t    vlen = vchildren ? vchildren.length : 0,\n\t    j,\n\t    c,\n\t    f,\n\t    vchild,\n\t    child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len !== 0) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar _child = originalChildren[i],\n\t\t\t    props = _child['__preactattr_'],\n\t\t\t    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;\n\t\t\tif (key != null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = _child;\n\t\t\t} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = _child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen !== 0) {\n\t\tfor (var i = 0; i < vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tvar key = vchild.key;\n\t\t\tif (key != null) {\n\t\t\t\tif (keyedLen && keyed[key] !== undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min < childrenLen) {\n\t\t\t\t\tfor (j = min; j < childrenLen; j++) {\n\t\t\t\t\t\tif (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\t\tif (j === childrenLen - 1) childrenLen--;\n\t\t\t\t\t\t\tif (j === min) min++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child !== dom && child !== f) {\n\t\t\t\tif (f == null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t} else if (child === f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t} else {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (var i in keyed) {\n\t\t\tif (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);\n\t\t}\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min <= childrenLen) {\n\t\tif ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);\n\t}\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nfunction recollectNodeTree(node, unmountOnly) {\n\tvar component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t} else {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node['__preactattr_'] != null && node['__preactattr_'].ref) node['__preactattr_'].ref(null);\n\n\t\tif (unmountOnly === false || node['__preactattr_'] == null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nfunction removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tvar next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tvar name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name] != null) && old[name] != null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nvar components = {};\n\n/** Reclaim a component for later re-use by the recycler. */\nfunction collectComponent(component) {\n\tvar name = component.constructor.name;\n\t(components[name] || (components[name] = [])).push(component);\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nfunction createComponent(Ctor, props, context) {\n\tvar list = components[Ctor.name],\n\t    inst;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t} else {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\tif (list) {\n\t\tfor (var i = list.length; i--;) {\n\t\t\tif (list[i].constructor === Ctor) {\n\t\t\t\tinst.nextBase = list[i].nextBase;\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn inst;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nfunction setComponentProps(component, props, opts, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tif (component.__ref = props.ref) delete props.ref;\n\tif (component.__key = props.key) delete props.key;\n\n\tif (!component.base || mountAll) {\n\t\tif (component.componentWillMount) component.componentWillMount();\n\t} else if (component.componentWillReceiveProps) {\n\t\tcomponent.componentWillReceiveProps(props, context);\n\t}\n\n\tif (context && context !== component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (opts !== 0) {\n\t\tif (opts === 1 || options.syncComponentUpdates !== false || !component.base) {\n\t\t\trenderComponent(component, 1, mountAll);\n\t\t} else {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nfunction renderComponent(component, opts, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tvar props = component.props,\n\t    state = component.state,\n\t    context = component.context,\n\t    previousProps = component.prevProps || props,\n\t    previousState = component.prevState || state,\n\t    previousContext = component.prevContext || context,\n\t    isUpdate = component.base,\n\t    nextBase = component.nextBase,\n\t    initialBase = isUpdate || nextBase,\n\t    initialChildComponent = component._component,\n\t    skip = false,\n\t    rendered,\n\t    inst,\n\t    cbase;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (opts !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t} else if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tvar childComponent = rendered && rendered.nodeName,\n\t\t    toUnmount,\n\t\t    base;\n\n\t\tif (typeof childComponent === 'function') {\n\t\t\t// set up high order component link\n\n\t\t\tvar childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor === childComponent && childProps.key == inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, 1, context, false);\n\t\t\t} else {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, 0, context, false);\n\t\t\t\trenderComponent(inst, 1, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t} else {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || opts === 1) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base !== initialBase && inst !== initialChildComponent) {\n\t\t\tvar baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base !== baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tvar componentRef = component,\n\t\t\t    t = component;\n\t\t\twhile (t = t._parentComponent) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t} else if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, previousContext);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\tif (component._renderCallbacks != null) {\n\t\twhile (component._renderCallbacks.length) {\n\t\t\tcomponent._renderCallbacks.pop().call(component);\n\t\t}\n\t}\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nfunction buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tvar c = dom && dom._component,\n\t    originalComponent = c,\n\t    oldDom = dom,\n\t    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n\t    isOwner = isDirectOwner,\n\t    props = getNodeProps(vnode);\n\twhile (c && !isOwner && (c = c._parentComponent)) {\n\t\tisOwner = c.constructor === vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, 3, context, mountAll);\n\t\tdom = c.base;\n\t} else {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, 1, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom !== oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nfunction unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tvar base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tvar inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t} else if (base) {\n\t\tif (base['__preactattr_'] && base['__preactattr_'].ref) base['__preactattr_'].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\tcollectComponent(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n\n/** Base Component class.\n *\tProvides `setState()` and `forceUpdate()`, which trigger rendering.\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nfunction Component(props, context) {\n\tthis._dirty = true;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.context = context;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.props = props;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.state = this.state || {};\n}\n\nextend(Component.prototype, {\n\n\t/** Returns a `boolean` indicating if the component should re-render when receiving the given `props` and `state`.\n  *\t@param {object} nextProps\n  *\t@param {object} nextState\n  *\t@param {object} nextContext\n  *\t@returns {Boolean} should the component re-render\n  *\t@name shouldComponentUpdate\n  *\t@function\n  */\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n  *\t@param {object} state\t\tA hash of state properties to update with new values\n  *\t@param {function} callback\tA function to be called once component state is updated\n  */\n\tsetState: function setState(state, callback) {\n\t\tvar s = this.state;\n\t\tif (!this.prevState) this.prevState = extend({}, s);\n\t\textend(s, typeof state === 'function' ? state(s, this.props) : state);\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/** Immediately perform a synchronous re-render of the component.\n  *\t@param {function} callback\t\tA function to be called after component is re-rendered.\n  *\t@private\n  */\n\tforceUpdate: function forceUpdate(callback) {\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\trenderComponent(this, 2);\n\t},\n\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n  *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n  *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n  *\t@param {object} state\t\tThe component's current state\n  *\t@param {object} context\t\tContext object (if a parent component has provided context)\n  *\t@returns VNode\n  */\n\trender: function render() {}\n});\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nfunction render(vnode, parent, merge) {\n  return diff(merge, vnode, {}, false, parent, false);\n}\n\nvar preact = {\n\th: h,\n\tcreateElement: h,\n\tcloneElement: cloneElement,\n\tComponent: Component,\n\trender: render,\n\trerender: rerender,\n\toptions: options\n};\n\nexport default preact;\nexport { h, h as createElement, cloneElement, Component, render, rerender, options };\n//# sourceMappingURL=preact.esm.js.map\n"],"sourceRoot":""}