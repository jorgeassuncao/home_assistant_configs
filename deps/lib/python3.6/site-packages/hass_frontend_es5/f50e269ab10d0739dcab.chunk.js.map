{"version":3,"sources":["webpack:///./src/panels/calendar/ha-big-calendar.js","webpack:///./src/panels/calendar/ha-panel-calendar.js"],"names":["lib_default","a","setLocalizer","momentLocalizer","moment_default","ha_big_calendar_HaBigCalendar","Object","events_mixin","polymer_element","_createClass","HaBigCalendar","key","value","events","_this2","this","allViews","Views","values","BCElement","preact_compat_es","default","createElement","views","popup","onNavigate","date","viewName","fire","onView","eventPropGetter","_setEventStyle","defaultView","defaultDate","Date","render","$","root","event","newStyle","color","backgroundColor","style","html_tag","_templateObject","type","Array","observer","customElements","define","ha_panel_calendar_HaPanelCalendar","localize_mixin","ha_panel_calendar_createClass","HaPanelCalendar","get","object","property","receiver","Function","prototype","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","call","__proto__","_fetchCalendars","hass","callApi","then","result","calendars","selectedCalendars","map","cal","entity_id","_this3","start","dates_default","firstVisibleDay","currentDate","toISOString","end","lastVisibleDay","params","encodeURI","calls","Promise","all","results","tmpEvents","forEach","res","ev","push","startDate","endDate","currentView","startOf","endOf","subtract","add","detail","_fetchData","ha_panel_calendar_templateObject","String","narrow","Boolean","reflectToAttribute","showMenu"],"mappings":"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","file":"f50e269ab10d0739dcab.chunk.js","sourcesContent":["import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n/* eslint-disable */\nimport { render } from 'react-dom';\nimport React from 'react';\n/* eslint-enable */\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport EventsMixin from '../../mixins/events-mixin.js';\n\nimport '../../resources/ha-style.js';\n\nBigCalendar.setLocalizer(BigCalendar.momentLocalizer(moment));\n\nconst DEFAULT_VIEW = 'month';\n\nclass HaBigCalendar extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <link rel=\"stylesheet\" href=\"/static/panels/calendar/react-big-calendar.css\">\n      <style>\n        div#root {\n          height: 100%;\n          width: 100%;\n        }\n      </style>\n      <div id=\"root\"></div>`;\n  }\n\n  static get properties() {\n    return {\n      events: {\n        type: Array,\n        observer: '_update',\n      },\n\n    };\n  }\n\n  _update(events) {\n    const allViews = BigCalendar.Views.values;\n\n    const BCElement = React.createElement(\n      BigCalendar,\n      { events: events,\n        views: allViews,\n        popup: true,\n        onNavigate: (date, viewName) => this.fire('navigate', { date, viewName }),\n        onView: viewName => this.fire('view-changed', { viewName }),\n        eventPropGetter: this._setEventStyle,\n        defaultView: DEFAULT_VIEW,\n        defaultDate: new Date(),\n      }\n    );\n    render(BCElement, this.$.root);\n  }\n\n  _setEventStyle(event) {\n    // https://stackoverflow.com/questions/34587067/change-color-of-react-big-calendar-events\n    const newStyle = {};\n    if (event.color) {\n      newStyle.backgroundColor = event.color;\n    }\n    return { style: newStyle };\n  }\n}\n\ncustomElements.define('ha-big-calendar', HaBigCalendar);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-checkbox/paper-checkbox.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport moment from 'moment';\nimport dates from 'react-big-calendar/lib/utils/dates';\n\nimport '../../components/ha-menu-button.js';\nimport '../../resources/ha-style.js';\nimport './ha-big-calendar.js';\n\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\nconst DEFAULT_VIEW = 'month';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPanelCalendar extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 16px;\n          @apply --layout-horizontal;\n        }\n\n        ha-big-calendar {\n          min-height: 500px;\n          min-width: 100%;\n        }\n\n        #calendars {\n          padding-right: 16px;\n          width: 15%;\n          min-width: 170px;\n        }\n\n        paper-item {\n          cursor: pointer;\n        }\n\n        div.all_calendars {\n    ￼     height: 20px;\n    ￼     text-align: center;\n        }\n\n        .iron-selected {\n          background-color: #e5e5e5;\n          font-weight: normal;\n        }\n\n        :host([narrow]) .content {\n          flex-direction: column;\n        }\n        :host([narrow]) #calendars {\n          margin-bottom: 24px;\n          width: 100%;\n        }\n      </style>\n\n      <app-header-layout has-scrolling-region>\n        <app-header slot=\"header\" fixed>\n          <app-toolbar>\n            <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n            <div main-title>[[localize('panel.calendar')]]</div>\n          </app-toolbar>\n        </app-header>\n\n        <div class=\"flex content\">\n          <div id=\"calendars\" class=\"layout vertical wrap\">\n            <paper-card heading=\"Calendars\">\n              <paper-listbox\n                id=\"calendar_list\"\n                multi\n                on-selected-items-changed=\"_fetchData\"\n                selected-values=\"{{selectedCalendars}}\"\n                attr-for-selected=\"item-name\"\n              >\n                <template is=\"dom-repeat\" items=\"[[calendars]]\">\n                  <paper-item item-name=\"[[item.entity_id]]\">\n                    <span class=\"calendar_color\" style$=\"background-color: [[item.color]]\"></span>\n                    <span class=\"calendar_color_spacer\"></span>\n                    [[item.name]]\n                  </paper-item>\n                </template>\n              </paper-listbox>\n            </paper-card>\n          </div>\n          <div class=\"flex layout horizontal wrap\">\n            <ha-big-calendar\n              default-date=\"[[currentDate]]\"\n              default-view=\"[[currentView]]\"\n              on-navigate='_handleNavigate'\n              on-view='_handleViewChanged'\n              events=\"[[events]]\">\n            </ha-big-calendar>\n          </div>\n        </div>\n      </app-header-layout>`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      currentView: {\n        type: String,\n        value: DEFAULT_VIEW\n      },\n\n      currentDate: {\n        type: Object,\n        value: new Date()\n      },\n\n      events: {\n        type: Array,\n        value: [],\n      },\n\n      calendars: {\n        type: Array,\n        value: [],\n      },\n\n      selectedCalendars: {\n        type: Array,\n        value: [],\n      },\n\n      narrow: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._fetchCalendars();\n  }\n\n  _fetchCalendars() {\n    this.hass.callApi('get', 'calendars')\n      .then((result) => {\n        this.calendars = result;\n        this.selectedCalendars = result.map(cal => cal.entity_id);\n      });\n  }\n\n  _fetchData() {\n    const start = dates.firstVisibleDay(this.currentDate).toISOString();\n    const end = dates.lastVisibleDay(this.currentDate).toISOString();\n    const params = encodeURI(`?start=${start}&end=${end}`);\n    const calls = this.selectedCalendars.map(cal => this.hass.callApi('get', `calendars/${cal}${params}`));\n    Promise.all(calls).then((results) => {\n      const tmpEvents = [];\n\n      results.forEach((res) => {\n        res.forEach((ev) => {\n          ev.start = new Date(ev.start);\n          if (ev.end) {\n            ev.end = new Date(ev.end);\n          } else {\n            ev.end = null;\n          }\n          tmpEvents.push(ev);\n        });\n      });\n      this.events = tmpEvents;\n    });\n  }\n\n  _getDateRange() {\n    let startDate;\n    let endDate;\n    if (this.currentView === 'day') {\n      startDate = moment(this.currentDate).startOf('day');\n      endDate = moment(this.currentDate).startOf('day');\n    } else if (this.currentView === 'week') {\n      startDate = moment(this.currentDate).startOf('isoWeek');\n      endDate = moment(this.currentDate).endOf('isoWeek');\n    } else if (this.currentView === 'month') {\n      startDate = moment(this.currentDate).startOf('month').subtract(7, 'days');\n      endDate = moment(this.currentDate).endOf('month').add(7, 'days');\n    } else if (this.currentView === 'agenda') {\n      startDate = moment(this.currentDate).startOf('day');\n      endDate = moment(this.currentDate).endOf('day').add(1, 'month');\n    }\n    return [startDate.toISOString(), endDate.toISOString()];\n  }\n\n  _handleViewChanged(ev) {\n    // Calendar view changed\n    this.currentView = ev.detail.viewName;\n    this._fetchData();\n  }\n\n  _handleNavigate(ev) {\n    // Calendar date range changed\n    this.currentDate = ev.detail.date;\n    this.currentView = ev.detail.viewName;\n    this._fetchData();\n  }\n}\n\ncustomElements.define('ha-panel-calendar', HaPanelCalendar);\n"],"sourceRoot":""}