{"version":3,"sources":["webpack:///./src/util/custom-panel/set-custom-panel-properties.js","webpack:///./src/util/custom-panel/create-custom-panel-element.js","webpack:///./src/util/custom-panel/load-custom-panel.js","webpack:///./src/panels/custom/ha-panel-custom.js","webpack:///./src/common/dom/load_resource.js"],"names":["setCustomPanelProperties","root","properties","setProperties","Object","keys","forEach","key","createCustomPanelElement","panelConfig","tagName","name","document","createElement","JS_CACHE","loadCustomPanel","html_url","toLoad","__webpack_require__","e","then","bind","embed_iframe","push","Promise","all","_ref","_slicedToArray","importHrefPromise","js_url","_common_dom_load_resource_js__WEBPACK_IMPORTED_MODULE_0__","b","module_url","c","reject","629","module","__webpack_exports__","r","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_1__","_mixins_navigate_mixin_js__WEBPACK_IMPORTED_MODULE_2__","_util_custom_panel_load_custom_panel_js__WEBPACK_IMPORTED_MODULE_3__","_util_custom_panel_create_custom_panel_element_js__WEBPACK_IMPORTED_MODULE_4__","_util_custom_panel_set_custom_panel_properties_js__WEBPACK_IMPORTED_MODULE_5__","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","prototype","HaPanelCustom","this","_this","__proto__","getPrototypeOf","call","_setProperties","get","hass","narrow","Boolean","showMenu","route","panel","type","observer","value","_this2","window","customPanel","lastChild","remove","config","_panel_custom","tempA","href","trust_external","location","hostname","includes","confirm","innerHTML","iframeDoc","querySelector","contentWindow","open","write","customPanelJS","close","a","element","appendChild","alert","initialize","customElements","define","_load","tag","url","resolve","attr","parent","onload","onerror","async","rel","d","loadModule","loadCSS","loadJS"],"mappings":"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","file":"dfa4c643837f45bce0c4.chunk.js","sourcesContent":["export default function setCustomPanelProperties(root, properties) {\n  if ('setProperties' in root) {\n    root.setProperties(properties);\n  } else {\n    Object.keys(properties).forEach((key) => {\n      root[key] = properties[key];\n    });\n  }\n}\n","export default function createCustomPanelElement(panelConfig) {\n  // Legacy support. Custom panels used to have to define element ha-panel-{name}\n  const tagName = 'html_url' in panelConfig ? `ha-panel-${panelConfig.name}` : panelConfig.name;\n  return document.createElement(tagName);\n}\n","import { loadJS, loadModule } from '../../common/dom/load_resource.js';\n\n// Make sure we only import every JS-based panel once (HTML import has this built-in)\nconst JS_CACHE = {};\n\nexport default function loadCustomPanel(panelConfig) {\n  if (panelConfig.html_url) {\n    const toLoad = [\n      import(/* webpackChunkName: \"import-href-polyfill\" */ '../../resources/html-import/import-href.js'),\n    ];\n\n    if (!panelConfig.embed_iframe) {\n      toLoad.push(import(/* webpackChunkName: \"legacy-support\" */ '../legacy-support.js'));\n    }\n\n    return Promise.all(toLoad).then(([{ importHrefPromise }]) =>\n      importHrefPromise(panelConfig.html_url));\n  } else if (panelConfig.js_url) {\n    if (!(panelConfig.js_url in JS_CACHE)) {\n      JS_CACHE[panelConfig.js_url] = loadJS(panelConfig.js_url);\n    }\n    return JS_CACHE[panelConfig.js_url];\n  } else if (panelConfig.module_url) {\n    return loadModule(panelConfig.module_url);\n  }\n  return Promise.reject('No valid url found in panel config.');\n}\n","import { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport NavigateMixin from '../../mixins/navigate-mixin.js';\nimport loadCustomPanel from '../../util/custom-panel/load-custom-panel.js';\nimport createCustomPanelElement from '../../util/custom-panel/create-custom-panel-element.js';\nimport setCustomPanelProperties from '../../util/custom-panel/set-custom-panel-properties.js';\n\n/*\n * Mixins are used by ifram to communicate with main frontend.\n * @appliesMixin EventsMixin\n * @appliesMixin NavigateMixin\n */\nclass HaPanelCustom extends NavigateMixin(EventsMixin(PolymerElement)) {\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      route: Object,\n      panel: {\n        type: Object,\n        observer: '_panelChanged',\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_dataChanged(hass, narrow, showMenu, route)'\n    ];\n  }\n\n  constructor() {\n    super();\n    this._setProperties = null;\n  }\n\n  _panelChanged(panel) {\n    // Clean up\n    delete window.customPanel;\n    this._setProperties = null;\n    while (this.lastChild) {\n      this.remove(this.lastChild);\n    }\n\n    const config = panel.config._panel_custom;\n\n    const tempA = document.createElement('a');\n    tempA.href = config.html_url || config.js_url || config.module_url;\n\n    if (!config.trust_external && !['localhost', '127.0.0.1', location.hostname].includes(tempA.hostname)) {\n      if (!confirm(`Do you trust the external panel \"${config.name}\" at \"${tempA.href}\"?\n\nIt will have access to all data in Home Assistant.\n\n(Check docs for the panel_custom component to hide this message)`)) {\n        return;\n      }\n    }\n\n    if (!config.embed_iframe) {\n      loadCustomPanel(config)\n        .then(\n          () => {\n            const element = createCustomPanelElement(config);\n            this._setProperties = props => setCustomPanelProperties(element, props);\n            setCustomPanelProperties(element, {\n              panel,\n              hass: this.hass,\n              narrow: this.narrow,\n              showMenu: this.showMenu,\n              route: this.route,\n            });\n            this.appendChild(element);\n          },\n          () => {\n            alert(`Unable to load custom panel from ${tempA.href}`);\n          }\n        );\n      return;\n    }\n\n    window.customPanel = this;\n    this.innerHTML = `\n    <style>\n      iframe {\n        border: 0;\n        width: 100%;\n        height: 100%;\n        display: block;\n      }\n    </style>\n    <iframe></iframe>\n    `;\n    const iframeDoc = this.querySelector('iframe').contentWindow.document;\n    iframeDoc.open();\n    iframeDoc.write(`<script src='${window.customPanelJS}'></script>`);\n    iframeDoc.close();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    delete window.customPanel;\n  }\n\n  _dataChanged(hass, narrow, showMenu, route) {\n    if (!this._setProperties) return;\n    this._setProperties({ hass, narrow, showMenu, route });\n  }\n\n  registerIframe(initialize, setProperties) {\n    initialize(this.panel, {\n      hass: this.hass,\n      narrow: this.narrow,\n      showMenu: this.showMenu,\n      route: this.route,\n    });\n    this._setProperties = setProperties;\n  }\n}\n\ncustomElements.define('ha-panel-custom', HaPanelCustom);\n","// Load a resource and get a promise when loading done.\n// From: https://davidwalsh.name/javascript-loader\n\nfunction _load(tag, url, type) {\n  // This promise will be used by Promise.all to determine success or failure\n  return new Promise(function (resolve, reject) {\n    const element = document.createElement(tag);\n    let attr = 'src';\n    let parent = 'body';\n\n    // Important success and error for the promise\n    element.onload = () => resolve(url);\n    element.onerror = () => reject(url);\n\n    // Need to set different attributes depending on tag type\n    switch (tag) {\n      case 'script':\n        element.async = true;\n        if (type) {\n          element.type = type;\n        }\n        break;\n      case 'link':\n        element.type = 'text/css';\n        element.rel = 'stylesheet';\n        attr = 'href';\n        parent = 'head';\n    }\n\n    // Inject into document to kick off loading\n    element[attr] = url;\n    document[parent].appendChild(element);\n  });\n}\n\nexport const loadCSS = url => _load('link', url);\nexport const loadJS = url => _load('script', url);\nexport const loadImg = url => _load('img', url);\nexport const loadModule = url => _load('script', url, 'module');\n"],"sourceRoot":""}