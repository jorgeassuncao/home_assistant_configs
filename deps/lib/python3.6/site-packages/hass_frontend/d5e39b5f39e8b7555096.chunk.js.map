{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.js","webpack:///./node_modules/@polymer/app-storage/app-storage-behavior.js","webpack:///./src/util/app-localstorage-document.js","webpack:///./src/components/ha-combo-box.js","webpack:///./src/components/ha-service-picker.js","webpack:///./src/panels/dev-service/ha-panel-dev-service.js"],"names":["customElements","define","Object","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_10__","a","_mixins_localize_mixin_js__WEBPACK_IMPORTED_MODULE_9__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__","template","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","properties","allowCustomEntity","type","Boolean","value","hass","observer","_hass","_states","Array","computed","autofocus","label","String","notify","opened","domainFilter","entityFilter","Function","disabled","_computeLabel","localize","_computeStates","entityIds","keys","states","filter","eid","substr","indexOf","entities","sort","map","key","_computeStateName","state","_common_entity_compute_state_name_js__WEBPACK_IMPORTED_MODULE_8__","_openedChanged","newVal","this","_hassChanged","_computeToggleIcon","_fireChanged","ev","stopPropagation","fire","273","module","__webpack_exports__","__webpack_require__","SPLICES_RX","LENGTH_RX","NUMBER_RX","AppStorageBehavior","data","zeroValue","sequentialTransactions","log","observers","created","__initialized","__syncingToMemory","__initializingStoredValue","__transactionQueueAdvances","Promise","resolve","ready","_initializeStoredValue","isNew","transactionsComplete","saveValue","args","reset","destroy","initializeStoredValue","_getStoredValue","then","_log","_setStoredValue","syncToMemory","set","bind","getStoredValue","storagePath","setStoredValue","memoryPathToStoragePath","path","storagePathToMemoryPath","operation","_group","call","_groupEnd","valueIsEmpty","isArray","length","prototype","isPrototypeOf","_enqueueTransaction","transaction","result","catch","error","_error","console","apply","arguments","group","groupEnd","initializingStoredValue","e","__dataChanged","change","__pathCanBeIgnored","__normalizeMemoryPath","indexSplices","__pathIsSplices","__parentPath","get","parts","split","parentPath","currentPath","normalizedPath","i","push","test","join","slice","__pathRefersToArray","__pathTailToIndex","tail","pop","window","parseInt","replace","polymer_fn","is","behaviors","sessionOnly","storage","attached","listen","top","detached","unlisten","__setStorageValue","reject","removeItem","__parseValueFromStorage","node","__computeStorage","sessionStorage","localStorage","__storageSourceChanged","__onStorage","event","storageArea","__onAppLocalStorageChanged","detail","JSON","parse","getItem","setItem","stringify","events_mixin","polymer_element","html_tag","allowCustomValue","items","_items","itemLabelPath","itemValuePath","_itemsChanged","_computeItemLabel","item","localize_mixin","_services","oldHass","services","forEach","domain","ERROR_SENTINEL","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_6__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","narrow","showMenu","domainService","_domain","_service","serviceData","parsedJSON","validJSON","_attributes","_description","_domainServiceChanged","_computeAttributesArray","service","serviceDomains","fields","field","assign","_computeDescription","description","_computeServicedataKey","_computeDomain","_computeService","_computeParsedServiceData","err","_computeValidJSON","_computeHasEntity","attributes","some","attr","_computeEntityValue","entity_id","_computeEntityDomainFilter","_callService","alert","callService","_entityPicked","target"],"mappings":"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","file":"d5e39b5f39e8b7555096.chunk.js","sourcesContent":["import '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-icon-item.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport '@vaadin/vaadin-combo-box/vaadin-combo-box-light.js';\n\n\nimport './state-badge.js';\n\nimport computeStateName from '../../common/entity/compute_state_name.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\nimport EventsMixin from '../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaEntityPicker extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <vaadin-combo-box-light\n      items=\"[[_states]]\"\n      item-value-path=\"entity_id\"\n      item-label-path=\"entity_id\"\n      value=\"{{value}}\"\n      opened=\"{{opened}}\"\n      allow-custom-value=\"[[allowCustomEntity]]\"\n      on-change='_fireChanged'\n    >\n      <paper-input autofocus=\"[[autofocus]]\" label=\"[[_computeLabel(label, localize)]]\" class=\"input\" value=\"[[value]]\" disabled=\"[[disabled]]\">\n        <paper-icon-button slot=\"suffix\" class=\"clear-button\" icon=\"hass:close\" no-ripple=\"\" hidden$=\"[[!value]]\">Clear</paper-icon-button>\n        <paper-icon-button slot=\"suffix\" class=\"toggle-button\" icon=\"[[_computeToggleIcon(opened)]]\" hidden=\"[[!_states.length]]\">Toggle</paper-icon-button>\n      </paper-input>\n      <template>\n        <style>\n          paper-icon-item {\n            margin: -10px;\n          }\n        </style>\n        <paper-icon-item>\n          <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n          <paper-item-body two-line=\"\">\n            <div>[[_computeStateName(item)]]</div>\n            <div secondary=\"\">[[item.entity_id]]</div>\n          </paper-item-body>\n        </paper-icon-item>\n      </template>\n    </vaadin-combo-box-light>\n`;\n  }\n\n  static get properties() {\n    return {\n      allowCustomEntity: {\n        type: Boolean,\n        value: false,\n      },\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n      _hass: Object,\n      _states: {\n        type: Array,\n        computed: '_computeStates(_hass, domainFilter, entityFilter)',\n      },\n      autofocus: Boolean,\n      label: {\n        type: String,\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged',\n      },\n      domainFilter: {\n        type: String,\n        value: null,\n      },\n      entityFilter: {\n        type: Function,\n        value: null,\n      },\n      disabled: Boolean,\n    };\n  }\n\n  _computeLabel(label, localize) {\n    return label === undefined\n      ? localize('ui.components.entity.entity-picker.entity')\n      : label;\n  }\n\n  _computeStates(hass, domainFilter, entityFilter) {\n    if (!hass) return [];\n\n    let entityIds = Object.keys(hass.states);\n\n    if (domainFilter) {\n      entityIds = entityIds.filter(eid => eid.substr(0, eid.indexOf('.')) === domainFilter);\n    }\n\n    let entities = entityIds.sort().map(key => hass.states[key]);\n\n    if (entityFilter) {\n      entities = entities.filter(entityFilter);\n    }\n\n    return entities;\n  }\n\n  _computeStateName(state) {\n    return computeStateName(state);\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._hass = this.hass;\n    }\n  }\n\n  _hassChanged(newVal) {\n    if (!this.opened) {\n      this._hass = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? 'hass:menu-up' : 'hass:menu-down';\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire('change');\n  }\n}\n\ncustomElements.define('ha-entity-picker', HaEntityPicker);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nvar SPLICES_RX = /\\.splices$/;\nvar LENGTH_RX = /\\.length$/;\nvar NUMBER_RX = /\\.?#?([0-9]+)$/;\n\n/**\n * AppStorageBehavior is an abstract behavior that makes it easy to\n * synchronize in-memory data and a persistent storage system, such as\n * the browser's IndexedDB, or a remote database like Firebase.\n *\n * For examples of how to use this behavior to write your own app storage\n * elements see `<app-localstorage-document>` here, or check out\n * [polymerfire](https://github.com/Firebase/polymerfire) and\n * [app-pouchdb](https://github.com/PolymerElements/app-pouchdb).\n *\n * @polymerBehavior\n */\nexport const AppStorageBehavior = {\n  properties: {\n    /**\n     * The data to synchronize.\n     */\n    data: {\n      type: Object,\n      notify: true,\n      value: function() {\n        return this.zeroValue;\n      }\n    },\n\n    /**\n     * If this is true transactions will happen one after the other,\n     * never in parallel.\n     *\n     * Specifically, no transaction will begin until every previously\n     * enqueued transaction by this element has completed.\n     *\n     * If it is false, new transactions will be executed as they are\n     * received.\n     */\n    sequentialTransactions: {type: Boolean, value: false},\n\n    /**\n     * When true, will perform detailed logging.\n     */\n    log: {type: Boolean, value: false}\n  },\n\n  observers: ['__dataChanged(data.*)'],\n\n  created: function() {\n    this.__initialized = false;\n    this.__syncingToMemory = false;\n    this.__initializingStoredValue = null;\n    this.__transactionQueueAdvances = Promise.resolve();\n  },\n\n  ready: function() {\n    this._initializeStoredValue();\n  },\n\n  /**\n   * Override this getter to return true if the value has never been\n   * persisted to storage.\n   *\n   * @return {boolean}\n   */\n  get isNew() {\n    return true;\n  },\n\n  /**\n   * A promise that will resolve once all queued transactions\n   * have completed.\n   *\n   * This field is updated as new transactions are enqueued, so it will\n   * only wait for transactions which were enqueued when the field\n   * was accessed.\n   *\n   * This promise never rejects.\n   *\n   * @return {Promise}\n   */\n  get transactionsComplete() {\n    return this.__transactionQueueAdvances;\n  },\n\n  /**\n   * Override this getter to define the default value to use when\n   * there's no data stored.\n   *\n   * @return {*}\n   */\n  get zeroValue() {\n    return undefined;\n  },\n\n  /**\n   * Override this method.\n   *\n   * If the data value represented by this storage instance is new, this\n   * method generates an attempt to write the value to storage.\n   *\n   *\n   * @param {*} args\n   * @return {Promise} a Promise that settles only once the write has.\n   */\n  saveValue: function(args) {\n    return Promise.resolve();\n  },\n\n  /**\n   * Optional. Override this method to clear out the mapping of this\n   * storage object and a logical location within storage.\n   *\n   * If this method is supported, after it's called, isNew() should be\n   * true.\n   */\n  reset: function() {},\n\n  /**\n   * Remove the data from storage.\n   *\n   * @return {Promise} A promise that settles once the destruction is\n   *   complete.\n   */\n  destroy: function() {\n    this.data = this.zeroValue;\n    return this.saveValue();\n  },\n\n  /**\n   * Perform the initial sync between storage and memory. This method\n   * is called automatically while the element is being initialized.\n   * Implementations may override it.\n   *\n   * If an implementation intends to call this method, it should instead\n   * call _initializeStoredValue, which provides reentrancy protection.\n   *\n   * @return {Promise} A promise that settles once this process is\n   *     complete.\n   */\n  initializeStoredValue: function() {\n    if (this.isNew) {\n      return Promise.resolve();\n    }\n\n    // If this is not a \"new\" model, then we should attempt\n    // to read an initial value from storage:\n    return this._getStoredValue('data').then(function(data) {\n      this._log('Got stored value!', data, this.data);\n      if (data == null) {\n        return this._setStoredValue('data', this.data || this.zeroValue);\n      } else {\n        this.syncToMemory(function() {\n          this.set('data', data);\n        });\n      }\n    }.bind(this));\n  },\n\n  /**\n   * Override this method to implement reading a value from storage.\n   *\n   *\n   * @param {string} storagePath The path (through storage) of the value to\n   *   create, relative to the root of storage associated with this instance.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. _If there is no\n   *   such value at the provided path through storage, then the promise will\n   *   resolve to `undefined`._ The promise will be rejected if the transaction\n   *   fails for any reason.\n   */\n  getStoredValue: function(storagePath) {\n    return Promise.resolve();\n  },\n\n  /**\n   * Override this method to implement creating and updating\n   * stored values.\n   *\n   *\n   * @param {string} storagePath The path of the value to update, relative\n   *   to the root storage path configured for this instance.\n   * @param {*} value The updated in-memory value to apply to the stored value\n   *   at the provided path.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. The promise\n   *   will be rejected if the transaction fails for any reason.\n   */\n  setStoredValue: function(storagePath, value) {\n    return Promise.resolve(value);\n  },\n\n  /**\n   * Maps a Polymer databinding path to the corresponding path in the\n   * storage system. Override to define a custom mapping.\n   *\n   * The inverse of storagePathToMemoryPath.\n   *\n   * @param {string} path An in-memory path through a storage object.\n   * @return {string} The provided path mapped to the equivalent location in\n   *   storage. This mapped version of the path is suitable for use with the\n   *   CRUD operations on both memory and storage.\n   */\n  memoryPathToStoragePath: function(path) {\n    return path;\n  },\n\n  /**\n   * Maps a storage path to the corresponding Polymer databinding path.\n   * Override to define a custom mapping.\n   *\n   * The inverse of memoryPathToStoragePath.\n   *\n   * @param {string} path The storage path through a storage object.\n   * @return {string} The provided path through storage mapped to the\n   *   equivalent Polymer path through the in-memory representation of storage.\n   */\n  storagePathToMemoryPath: function(path) {\n    return path;\n  },\n\n  /**\n   * Enables performing transformations on the in-memory representation of\n   * storage without activating observers that will cause those\n   * transformations to be re-applied to the storage backend. This is useful\n   * for preventing redundant (or cyclical) application of transformations.\n   *\n   * @param {Function} operation A function that will perform the desired\n   *   transformation. It will be called synchronously, when it is safe to\n   *   apply the transformation.\n   */\n  syncToMemory: function(operation) {\n    if (this.__syncingToMemory) {\n      return;\n    }\n\n    this._group('Sync to memory.');\n\n    this.__syncingToMemory = true;\n    operation.call(this);\n    this.__syncingToMemory = false;\n\n    this._groupEnd('Sync to memory.');\n  },\n\n  /**\n   * A convenience method. Returns true iff value is null, undefined,\n   * an empty array, or an object with no keys.\n   */\n  valueIsEmpty: function(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else if (Object.prototype.isPrototypeOf(value)) {\n      return Object.keys(value).length === 0;\n    } else {\n      return value == null;\n    }\n  },\n\n  /**\n   * Like `getStoredValue` but called with a Polymer path rather than\n   * a storage path.\n   *\n   * @param {string} path The Polymer path to get.\n   * @return {Promise} A Promise of the value stored at that path.\n   */\n  _getStoredValue: function(path) {\n    return this.getStoredValue(this.memoryPathToStoragePath(path));\n  },\n\n  /**\n   * Like `setStoredValue` but called with a Polymer path rather than\n   * a storage path.\n   *\n   * @param {string} path The Polymer path to update.\n   * @param {*} value The updated in-memory value to apply to the stored value\n   *   at the provided path.\n   * @return {Promise} A promise that resolves with the canonical value stored\n   *   at the provided path when the transaction has completed. The promise\n   *   will be rejected if the transaction fails for any reason.\n   */\n  _setStoredValue: function(path, value) {\n    return this.setStoredValue(this.memoryPathToStoragePath(path), value);\n  },\n\n  /**\n   * Enqueues the given function in the transaction queue.\n   *\n   * The transaction queue allows for optional parallelism/sequentiality\n   * via the `sequentialTransactions` boolean property, as well as giving\n   * the user a convenient way to wait for all pending transactions to\n   * finish.\n   *\n   * The given function may be called immediately or after an arbitrary\n   * delay. Its `this` context will be bound to the element.\n   *\n   * If the transaction performs any asynchronous operations it must\n   * return a promise.\n   *\n   * @param {Function} transaction A function implementing the transaction.\n   * @return {Promise} A promise that resolves once the transaction has\n   *   finished. This promise will never reject.\n   */\n  _enqueueTransaction: function(transaction) {\n    if (this.sequentialTransactions) {\n      transaction = transaction.bind(this);\n    } else {\n      var result = transaction.call(this);\n      transaction = function() {\n        return result;\n      };\n    }\n\n    return this.__transactionQueueAdvances =\n               this.__transactionQueueAdvances.then(transaction)\n                   .catch(function(error) {\n                     this._error('Error performing queued transaction.', error);\n                   }.bind(this));\n  },\n\n  /**\n   * A wrapper around `console.log`.\n   */\n  _log: function() {\n    if (this.log) {\n      console.log.apply(console, arguments);\n    }\n  },\n\n  /**\n   * A wrapper around `console.error`.\n   */\n  _error: function() {\n    if (this.log) {\n      console.error.apply(console, arguments);\n    }\n  },\n\n  /**\n   * A wrapper around `console.group`.\n   */\n  _group: function() {\n    if (this.log) {\n      console.group.apply(console, arguments);\n    }\n  },\n\n  /**\n   * A wrapper around `console.groupEnd`.\n   */\n  _groupEnd: function() {\n    if (this.log) {\n      console.groupEnd.apply(console, arguments);\n    }\n  },\n\n  /**\n   * A reentrancy-save wrapper around `this.initializeStoredValue`.\n   * Prefer calling this method over that one.\n   *\n   * @return {Promise} The result of calling `initializeStoredValue`,\n   *   or `undefined` if called while initializing.\n   */\n  _initializeStoredValue: function() {\n    if (this.__initializingStoredValue) {\n      return;\n    }\n\n    this._group('Initializing stored value.');\n\n    var initializingStoredValue = this.__initializingStoredValue =\n        this.initializeStoredValue()\n            .then(function() {\n              this.__initialized = true;\n              this.__initializingStoredValue = null;\n              this._groupEnd('Initializing stored value.');\n            }.bind(this))\n            .catch(function(e) {\n              this.__initializingStoredValue = null;\n              this._groupEnd('Initializing stored value.');\n            }.bind(this));\n\n    return this._enqueueTransaction(function() {\n      return initializingStoredValue;\n    });\n  },\n\n  __dataChanged: function(change) {\n    if (this.isNew || this.__syncingToMemory || !this.__initialized ||\n        this.__pathCanBeIgnored(change.path)) {\n      return;\n    }\n\n    var path = this.__normalizeMemoryPath(change.path);\n    var value = change.value;\n    var indexSplices = value && value.indexSplices;\n\n    this._enqueueTransaction(function() {\n      this._log('Setting', path + ':', indexSplices || value);\n\n      if (indexSplices && this.__pathIsSplices(path)) {\n        path = this.__parentPath(path);\n        value = this.get(path);\n      }\n\n      return this._setStoredValue(path, value);\n    });\n  },\n\n  __normalizeMemoryPath: function(path) {\n    var parts = path.split('.');\n    var parentPath = [];\n    var currentPath = [];\n    var normalizedPath = [];\n    var index;\n\n    for (var i = 0; i < parts.length; ++i) {\n      currentPath.push(parts[i]);\n      if (/^#/.test(parts[i])) {\n        normalizedPath.push(\n            this.get(parentPath).indexOf(this.get(currentPath)));\n      } else {\n        normalizedPath.push(parts[i]);\n      }\n      parentPath.push(parts[i]);\n    }\n\n    return normalizedPath.join('.');\n  },\n\n  __parentPath: function(path) {\n    var parentPath = path.split('.');\n    return parentPath.slice(0, parentPath.length - 1).join('.');\n  },\n\n  __pathCanBeIgnored: function(path) {\n    return LENGTH_RX.test(path) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathIsSplices: function(path) {\n    return SPLICES_RX.test(path) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathRefersToArray: function(path) {\n    return (SPLICES_RX.test(path) || LENGTH_RX.test(path)) &&\n        Array.isArray(this.get(this.__parentPath(path)));\n  },\n\n  __pathTailToIndex: function(path) {\n    var tail = path.split('.').pop();\n    return window.parseInt(tail.replace(NUMBER_RX, '$1'), 10);\n  }\n};\n","/* Forked because it contained an import.meta which webpack doesn't support. */\n/* eslint-disable */\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { AppStorageBehavior } from '@polymer/app-storage/app-storage-behavior.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport '@polymer/polymer/polymer-legacy.js';\n\n/**\n * app-localstorage-document synchronizes storage between an in-memory\n * value and a location in the browser's localStorage system.\n *\n * localStorage is a simple and widely supported storage API that provides both\n * permanent and session-based storage options. Using app-localstorage-document\n * you can easily integrate localStorage into your app via normal Polymer\n * databinding.\n *\n * app-localstorage-document is the reference implementation of an element\n * that uses `AppStorageBehavior`. Reading its code is a good way to get\n * started writing your own storage element.\n *\n * Example use:\n *\n *     <paper-input value=\"{{search}}\"></paper-input>\n *     <app-localstorage-document key=\"search\" data=\"{{search}}\">\n *     </app-localstorage-document>\n *\n * app-localstorage-document automatically synchronizes changes to the\n * same key across multiple tabs.\n *\n * Only supports storing JSON-serializable values.\n */\nPolymer({\n  is: 'app-localstorage-document',\n  behaviors: [AppStorageBehavior],\n\n  properties: {\n    /**\n     * Defines the logical location to store the data.\n     *\n     * @type{String}\n     */\n    key: {type: String, notify: true},\n\n    /**\n     * If true, the data will automatically be cleared from storage when\n     * the page session ends (i.e. when the user has navigated away from\n     * the page).\n     */\n    sessionOnly: {type: Boolean, value: false},\n\n    /**\n     * Either `window.localStorage` or `window.sessionStorage`, depending on\n     * `this.sessionOnly`.\n     */\n    storage: {type: Object, computed: '__computeStorage(sessionOnly)'}\n  },\n\n  observers: ['__storageSourceChanged(storage, key)'],\n\n  attached: function() {\n    this.listen(window, 'storage', '__onStorage');\n    this.listen(\n        window.top, 'app-local-storage-changed', '__onAppLocalStorageChanged');\n  },\n\n  detached: function() {\n    this.unlisten(window, 'storage', '__onStorage');\n    this.unlisten(\n        window.top, 'app-local-storage-changed', '__onAppLocalStorageChanged');\n  },\n\n  get isNew() {\n    return !this.key;\n  },\n\n  /**\n   * Stores a value at the given key, and if successful, updates this.key.\n   *\n   * @param {*} key The new key to use.\n   * @return {Promise}\n   */\n  saveValue: function(key) {\n    try {\n      this.__setStorageValue(/*{@type if (key ty){String}}*/ key, this.data);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    this.key = /** @type {String} */ (key);\n\n    return Promise.resolve();\n  },\n\n  reset: function() {\n    this.key = null;\n    this.data = this.zeroValue;\n  },\n\n  destroy: function() {\n    try {\n      this.storage.removeItem(this.key);\n      this.reset();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n\n    return Promise.resolve();\n  },\n\n  getStoredValue: function(path) {\n    var value;\n\n    if (this.key != null) {\n      try {\n        value = this.__parseValueFromStorage();\n\n        if (value != null) {\n          value = this.get(path, {data: value});\n        } else {\n          value = undefined;\n        }\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n\n    return Promise.resolve(value);\n  },\n\n  setStoredValue: function(path, value) {\n    if (this.key != null) {\n      try {\n        this.__setStorageValue(this.key, this.data);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n\n      this.fire('app-local-storage-changed', this, {node: window.top});\n    }\n\n    return Promise.resolve(value);\n  },\n\n  __computeStorage: function(sessionOnly) {\n    return sessionOnly ? window.sessionStorage : window.localStorage;\n  },\n\n  __storageSourceChanged: function(storage, key) {\n    this._initializeStoredValue();\n  },\n\n  __onStorage: function(event) {\n    if (event.key !== this.key || event.storageArea !== this.storage) {\n      return;\n    }\n\n    this.syncToMemory(function() {\n      this.set('data', this.__parseValueFromStorage());\n    });\n  },\n\n  __onAppLocalStorageChanged: function(event) {\n    if (event.detail === this || event.detail.key !== this.key ||\n        event.detail.storage !== this.storage) {\n      return;\n    }\n    this.syncToMemory(function() {\n      this.set('data', event.detail.data);\n    });\n  },\n\n  __parseValueFromStorage: function() {\n    try {\n      return JSON.parse(this.storage.getItem(this.key));\n    } catch (e) {\n      console.error('Failed to parse value from storage for', this.key);\n    }\n  },\n\n  __setStorageValue: function(key, value) {\n    if (typeof value === 'undefined')\n      value = null;\n    this.storage.setItem(key, JSON.stringify(value));\n  }\n});","import '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-item.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport '@vaadin/vaadin-combo-box/vaadin-combo-box-light.js';\n\nimport EventsMixin from '../mixins/events-mixin.js';\n\nclass HaComboBox extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style>\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    </style>\n    <vaadin-combo-box-light\n      items=\"[[_items]]\"\n      item-value-path=\"[[itemValuePath]]\"\n      item-label-path=\"[[itemLabelPath]]\"\n      value=\"{{value}}\"\n      opened=\"{{opened}}\"\n      allow-custom-value=\"[[allowCustomValue]]\"\n      on-change='_fireChanged'\n    >\n      <paper-input autofocus=\"[[autofocus]]\" label=\"[[label]]\" class=\"input\" value=\"[[value]]\">\n        <paper-icon-button slot=\"suffix\" class=\"clear-button\" icon=\"hass:close\" hidden$=\"[[!value]]\">Clear</paper-icon-button>\n        <paper-icon-button slot=\"suffix\" class=\"toggle-button\" icon=\"[[_computeToggleIcon(opened)]]\" hidden$=\"[[!items.length]]\">Toggle</paper-icon-button>\n      </paper-input>\n      <template>\n        <style>\n            paper-item {\n              margin: -5px -10px;\n            }\n        </style>\n        <paper-item>[[_computeItemLabel(item, itemLabelPath)]]</paper-item>\n      </template>\n    </vaadin-combo-box-light>\n`;\n  }\n\n  static get properties() {\n    return {\n      allowCustomValue: Boolean,\n      items: {\n        type: Object,\n        observer: '_itemsChanged',\n      },\n      _items: Object,\n      itemLabelPath: String,\n      itemValuePath: String,\n      autofocus: Boolean,\n      label: String,\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: '_openedChanged',\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._items = this.items;\n    }\n  }\n\n  _itemsChanged(newVal) {\n    if (!this.opened) {\n      this._items = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? 'hass:menu-up' : 'hass:menu-down';\n  }\n\n  _computeItemLabel(item, itemLabelPath) {\n    return itemLabelPath ? item[itemLabelPath] : item;\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire('change');\n  }\n}\n\ncustomElements.define('ha-combo-box', HaComboBox);\n","import { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\n\nimport './ha-combo-box.js';\n\nimport LocalizeMixin from '../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaServicePicker extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <ha-combo-box label=\"[[localize('ui.components.service-picker.service')]]\" items=\"[[_services]]\" value=\"{{value}}\" allow-custom-value=\"\"></ha-combo-box>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: '_hassChanged',\n      },\n      _services: Array,\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _hassChanged(hass, oldHass) {\n    if (!hass) {\n      this._services = [];\n      return;\n    } else if (oldHass && hass.services === oldHass.services) {\n      return;\n    }\n    const result = [];\n\n    Object.keys(hass.services).sort().forEach((domain) => {\n      const services = Object.keys(hass.services[domain]).sort();\n\n      for (let i = 0; i < services.length; i++) {\n        result.push(`${domain}.${services[i]}`);\n      }\n    });\n\n    this._services = result;\n  }\n}\n\ncustomElements.define('ha-service-picker', HaServicePicker);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-input/paper-textarea.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/entity/ha-entity-picker.js';\nimport '../../components/ha-menu-button.js';\nimport '../../components/ha-service-picker.js';\nimport '../../resources/ha-style.js';\nimport '../../util/app-localstorage-document.js';\n\nconst ERROR_SENTINEL = {};\nclass HaPanelDevService extends PolymerElement {\n  static get template() {\n    return html`\n  <style include='ha-style'>\n    :host {\n      -ms-user-select: initial;\n      -webkit-user-select: initial;\n      -moz-user-select: initial;\n    }\n\n    .content {\n      padding: 16px;\n    }\n\n    .ha-form {\n      margin-right: 16px;\n      max-width: 400px;\n    }\n\n    .description {\n      margin-top: 24px;\n      white-space: pre-wrap;\n    }\n\n    .header {\n      @apply --paper-font-title;\n    }\n\n    .attributes th {\n      text-align: left;\n    }\n\n    .attributes tr {\n      vertical-align: top;\n    }\n\n    .attributes tr:nth-child(odd) {\n      background-color: var(--table-row-background-color,#eee)\n    }\n\n    .attributes tr:nth-child(even) {\n      background-color: var(--table-row-alternative-background-color,#eee)\n    }\n\n    .attributes td:nth-child(3) {\n      white-space: pre-wrap;\n      word-break: break-word;\n    }\n\n    pre {\n      margin: 0;\n    }\n\n    h1 {\n      white-space: normal;\n    }\n\n    td {\n      padding: 4px;\n    }\n\n    .error {\n      color: var(--google-red-500);\n    }\n  </style>\n\n  <app-header-layout has-scrolling-region>\n    <app-header slot=\"header\" fixed>\n      <app-toolbar>\n        <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n        <div main-title>Services</div>\n      </app-toolbar>\n    </app-header>\n\n    <app-localstorage-document\n      key='panel-dev-service-state-domain-service'\n      data='{{domainService}}'>\n    </app-localstorage-document>\n    <app-localstorage-document\n      key='[[_computeServicedataKey(domainService)]]'\n      data='{{serviceData}}'>\n    </app-localstorage-document>\n\n    <div class='content'>\n      <p>\n        The service dev tool allows you to call any available service in Home Assistant.\n      </p>\n\n      <div class='ha-form'>\n        <ha-service-picker\n          hass='[[hass]]'\n          value='{{domainService}}'\n        ></ha-service-picker>\n        <template is='dom-if' if='[[_computeHasEntity(_attributes)]]'>\n          <ha-entity-picker\n            hass='[[hass]]'\n            value='[[_computeEntityValue(parsedJSON)]]'\n            on-change='_entityPicked'\n            disabled='[[!validJSON]]'\n            domain-filter='[[_computeEntityDomainFilter(_domain)]]'\n            allow-custom-entity\n          ></ha-entity-picker>\n        </template>\n        <paper-textarea\n          always-float-label\n          label='Service Data (JSON, optional)'\n          value='{{serviceData}}'\n        ></paper-textarea>\n        <paper-button\n          on-click='_callService'\n          raised\n          disabled='[[!validJSON]]'\n        >Call Service</paper-button>\n        <template is='dom-if' if='[[!validJSON]]'>\n            <span class='error'>Invalid JSON</span>\n        </template>\n      </div>\n\n      <template is='dom-if' if='[[!domainService]]'>\n        <h1>Select a service to see the description</h1>\n      </template>\n\n      <template is='dom-if' if='[[domainService]]'>\n        <template is='dom-if' if='[[!_description]]'>\n          <h1>No description is available</h1>\n        </template>\n        <template is='dom-if' if='[[_description]]'>\n          <h3>[[_description]]</h3>\n\n          <table class='attributes'>\n            <tr>\n              <th>Parameter</th>\n              <th>Description</th>\n              <th>Example</th>\n            </tr>\n            <template is='dom-if' if='[[!_attributes.length]]'>\n              <tr><td colspan='3'>This service takes no parameters.</td></tr>\n            </template>\n            <template is='dom-repeat' items='[[_attributes]]' as='attribute'>\n              <tr>\n                <td><pre>[[attribute.key]]</pre></td>\n                <td>[[attribute.description]]</td>\n                <td>[[attribute.example]]</td>\n              </tr>\n            </template>\n          </table>\n        </template>\n      </template>\n    </div>\n\n  </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n        value: false,\n      },\n\n      showMenu: {\n        type: Boolean,\n        value: false,\n      },\n\n      domainService: {\n        type: String,\n        observer: '_domainServiceChanged',\n      },\n\n      _domain: {\n        type: String,\n        computed: '_computeDomain(domainService)',\n      },\n\n      _service: {\n        type: String,\n        computed: '_computeService(domainService)',\n      },\n\n      serviceData: {\n        type: String,\n        value: '',\n      },\n\n      parsedJSON: {\n        type: Object,\n        computed: '_computeParsedServiceData(serviceData)'\n      },\n\n      validJSON: {\n        type: Boolean,\n        computed: '_computeValidJSON(parsedJSON)',\n      },\n\n      _attributes: {\n        type: Array,\n        computed: '_computeAttributesArray(hass, _domain, _service)',\n      },\n\n      _description: {\n        type: String,\n        computed: '_computeDescription(hass, _domain, _service)',\n      },\n    };\n  }\n\n  _domainServiceChanged() {\n    this.serviceData = '';\n  }\n\n  _computeAttributesArray(hass, domain, service) {\n    const serviceDomains = hass.services;\n    if (!(domain in serviceDomains)) return [];\n    if (!(service in serviceDomains[domain])) return [];\n\n    const fields = serviceDomains[domain][service].fields;\n    return Object.keys(fields).map(function (field) {\n      return Object.assign({ key: field }, fields[field]);\n    });\n  }\n\n  _computeDescription(hass, domain, service) {\n    const serviceDomains = hass.services;\n    if (!(domain in serviceDomains)) return undefined;\n    if (!(service in serviceDomains[domain])) return undefined;\n    return serviceDomains[domain][service].description;\n  }\n\n  _computeServicedataKey(domainService) {\n    return `panel-dev-service-state-servicedata.${domainService}`;\n  }\n\n  _computeDomain(domainService) {\n    return domainService.split('.', 1)[0];\n  }\n\n  _computeService(domainService) {\n    return domainService.split('.', 2)[1] || null;\n  }\n\n  _computeParsedServiceData(serviceData) {\n    try {\n      return serviceData ? JSON.parse(serviceData) : {};\n    } catch (err) {\n      return ERROR_SENTINEL;\n    }\n  }\n\n  _computeValidJSON(parsedJSON) {\n    return parsedJSON !== ERROR_SENTINEL;\n  }\n\n  _computeHasEntity(attributes) {\n    return attributes.some(attr => attr.key === 'entity_id');\n  }\n\n  _computeEntityValue(parsedJSON) {\n    return parsedJSON === ERROR_SENTINEL ? '' : parsedJSON.entity_id;\n  }\n\n  _computeEntityDomainFilter(domain) {\n    return domain === 'homeassistant' ? null : domain;\n  }\n\n  _callService() {\n    if (this.parsedJSON === ERROR_SENTINEL) {\n      // eslint-disable-next-line\n      alert(`Error parsing JSON: ${this.serviceData}`);\n    }\n\n    this.hass.callService(this._domain, this._service, this.parsedJSON);\n  }\n\n  _entityPicked(ev) {\n    this.serviceData = JSON.stringify(Object.assign({}, this.parsedJSON, {\n      entity_id: ev.target.value\n    }), null, 2);\n  }\n}\n\ncustomElements.define('ha-panel-dev-service', HaPanelDevService);\n"],"sourceRoot":""}