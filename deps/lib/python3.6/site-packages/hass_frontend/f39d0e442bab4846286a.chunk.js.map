{"version":3,"sources":["webpack:///./src/util/custom-panel/set-custom-panel-properties.js","webpack:///./src/util/custom-panel/create-custom-panel-element.js","webpack:///./src/util/custom-panel/load-custom-panel.js","webpack:///./src/panels/custom/ha-panel-custom.js","webpack:///./src/common/dom/load_resource.js"],"names":["setCustomPanelProperties","root","properties","setProperties","Object","keys","forEach","key","createCustomPanelElement","panelConfig","tagName","name","document","createElement","JS_CACHE","loadCustomPanel","html_url","toLoad","__webpack_require__","e","then","bind","embed_iframe","push","Promise","all","importHrefPromise","js_url","_common_dom_load_resource_js__WEBPACK_IMPORTED_MODULE_0__","b","module_url","c","reject","628","module","__webpack_exports__","r","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__","_mixins_events_mixin_js__WEBPACK_IMPORTED_MODULE_1__","_mixins_navigate_mixin_js__WEBPACK_IMPORTED_MODULE_2__","_util_custom_panel_load_custom_panel_js__WEBPACK_IMPORTED_MODULE_3__","_util_custom_panel_create_custom_panel_element_js__WEBPACK_IMPORTED_MODULE_4__","_util_custom_panel_set_custom_panel_properties_js__WEBPACK_IMPORTED_MODULE_5__","customElements","define","a","hass","narrow","Boolean","showMenu","route","panel","type","observer","observers","constructor","super","this","_setProperties","_panelChanged","window","customPanel","lastChild","remove","config","_panel_custom","tempA","href","trust_external","location","hostname","includes","confirm","element","props","appendChild","alert","innerHTML","iframeDoc","querySelector","contentWindow","open","write","customPanelJS","close","disconnectedCallback","_dataChanged","registerIframe","initialize","_load","tag","url","resolve","attr","parent","onload","onerror","async","rel","d","loadModule","loadCSS","loadJS"],"mappings":"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","file":"f39d0e442bab4846286a.chunk.js","sourcesContent":["export default function setCustomPanelProperties(root, properties) {\n  if ('setProperties' in root) {\n    root.setProperties(properties);\n  } else {\n    Object.keys(properties).forEach((key) => {\n      root[key] = properties[key];\n    });\n  }\n}\n","export default function createCustomPanelElement(panelConfig) {\n  // Legacy support. Custom panels used to have to define element ha-panel-{name}\n  const tagName = 'html_url' in panelConfig ? `ha-panel-${panelConfig.name}` : panelConfig.name;\n  return document.createElement(tagName);\n}\n","import { loadJS, loadModule } from '../../common/dom/load_resource.js';\n\n// Make sure we only import every JS-based panel once (HTML import has this built-in)\nconst JS_CACHE = {};\n\nexport default function loadCustomPanel(panelConfig) {\n  if (panelConfig.html_url) {\n    const toLoad = [\n      import(/* webpackChunkName: \"import-href-polyfill\" */ '../../resources/html-import/import-href.js'),\n    ];\n\n    if (!panelConfig.embed_iframe) {\n      toLoad.push(import(/* webpackChunkName: \"legacy-support\" */ '../legacy-support.js'));\n    }\n\n    return Promise.all(toLoad).then(([{ importHrefPromise }]) =>\n      importHrefPromise(panelConfig.html_url));\n  } else if (panelConfig.js_url) {\n    if (!(panelConfig.js_url in JS_CACHE)) {\n      JS_CACHE[panelConfig.js_url] = loadJS(panelConfig.js_url);\n    }\n    return JS_CACHE[panelConfig.js_url];\n  } else if (panelConfig.module_url) {\n    return loadModule(panelConfig.module_url);\n  }\n  return Promise.reject('No valid url found in panel config.');\n}\n","import { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\nimport NavigateMixin from '../../mixins/navigate-mixin.js';\nimport loadCustomPanel from '../../util/custom-panel/load-custom-panel.js';\nimport createCustomPanelElement from '../../util/custom-panel/create-custom-panel-element.js';\nimport setCustomPanelProperties from '../../util/custom-panel/set-custom-panel-properties.js';\n\n/*\n * Mixins are used by ifram to communicate with main frontend.\n * @appliesMixin EventsMixin\n * @appliesMixin NavigateMixin\n */\nclass HaPanelCustom extends NavigateMixin(EventsMixin(PolymerElement)) {\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      route: Object,\n      panel: {\n        type: Object,\n        observer: '_panelChanged',\n      }\n    };\n  }\n\n  static get observers() {\n    return [\n      '_dataChanged(hass, narrow, showMenu, route)'\n    ];\n  }\n\n  constructor() {\n    super();\n    this._setProperties = null;\n  }\n\n  _panelChanged(panel) {\n    // Clean up\n    delete window.customPanel;\n    this._setProperties = null;\n    while (this.lastChild) {\n      this.remove(this.lastChild);\n    }\n\n    const config = panel.config._panel_custom;\n\n    const tempA = document.createElement('a');\n    tempA.href = config.html_url || config.js_url || config.module_url;\n\n    if (!config.trust_external && !['localhost', '127.0.0.1', location.hostname].includes(tempA.hostname)) {\n      if (!confirm(`Do you trust the external panel \"${config.name}\" at \"${tempA.href}\"?\n\nIt will have access to all data in Home Assistant.\n\n(Check docs for the panel_custom component to hide this message)`)) {\n        return;\n      }\n    }\n\n    if (!config.embed_iframe) {\n      loadCustomPanel(config)\n        .then(\n          () => {\n            const element = createCustomPanelElement(config);\n            this._setProperties = props => setCustomPanelProperties(element, props);\n            setCustomPanelProperties(element, {\n              panel,\n              hass: this.hass,\n              narrow: this.narrow,\n              showMenu: this.showMenu,\n              route: this.route,\n            });\n            this.appendChild(element);\n          },\n          () => {\n            alert(`Unable to load custom panel from ${tempA.href}`);\n          }\n        );\n      return;\n    }\n\n    window.customPanel = this;\n    this.innerHTML = `\n    <style>\n      iframe {\n        border: 0;\n        width: 100%;\n        height: 100%;\n        display: block;\n      }\n    </style>\n    <iframe></iframe>\n    `;\n    const iframeDoc = this.querySelector('iframe').contentWindow.document;\n    iframeDoc.open();\n    iframeDoc.write(`<script src='${window.customPanelJS}'></script>`);\n    iframeDoc.close();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    delete window.customPanel;\n  }\n\n  _dataChanged(hass, narrow, showMenu, route) {\n    if (!this._setProperties) return;\n    this._setProperties({ hass, narrow, showMenu, route });\n  }\n\n  registerIframe(initialize, setProperties) {\n    initialize(this.panel, {\n      hass: this.hass,\n      narrow: this.narrow,\n      showMenu: this.showMenu,\n      route: this.route,\n    });\n    this._setProperties = setProperties;\n  }\n}\n\ncustomElements.define('ha-panel-custom', HaPanelCustom);\n","// Load a resource and get a promise when loading done.\n// From: https://davidwalsh.name/javascript-loader\n\nfunction _load(tag, url, type) {\n  // This promise will be used by Promise.all to determine success or failure\n  return new Promise(function (resolve, reject) {\n    const element = document.createElement(tag);\n    let attr = 'src';\n    let parent = 'body';\n\n    // Important success and error for the promise\n    element.onload = () => resolve(url);\n    element.onerror = () => reject(url);\n\n    // Need to set different attributes depending on tag type\n    switch (tag) {\n      case 'script':\n        element.async = true;\n        if (type) {\n          element.type = type;\n        }\n        break;\n      case 'link':\n        element.type = 'text/css';\n        element.rel = 'stylesheet';\n        attr = 'href';\n        parent = 'head';\n    }\n\n    // Inject into document to kick off loading\n    element[attr] = url;\n    document[parent].appendChild(element);\n  });\n}\n\nexport const loadCSS = url => _load('link', url);\nexport const loadJS = url => _load('script', url);\nexport const loadImg = url => _load('img', url);\nexport const loadModule = url => _load('script', url, 'module');\n"],"sourceRoot":""}