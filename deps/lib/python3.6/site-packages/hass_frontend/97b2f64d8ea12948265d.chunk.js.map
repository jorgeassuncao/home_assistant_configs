{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/panels/shopping-list/ha-panel-shopping-list.js"],"names":["_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","__webpack_require__","Object","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","a","_template","is","230","module","__webpack_exports__","_paper_item_behavior_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_5__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_6__","behaviors","616","r","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_12__","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_13__","_mixins_localize_mixin_js__WEBPACK_IMPORTED_MODULE_16__","customElements","define","template","properties","hass","narrow","Boolean","showMenu","canListen","items","type","Array","value","connectedCallback","super","this","_fetchData","bind","connection","subscribeEvents","then","unsub","_unsubEvents","disconnectedCallback","callApi","reverse","_itemCompleteTapped","ev","stopPropagation","model","item","id","complete","target","checked","catch","_addItem","name","$","addBox","setTimeout","focus","_addKeyPress","keyCode","_saveEdit","index","set","_clearCompleted"],"mappings":";6HAAAA,EAAAC,EAAA,GA8CAC,OAAAC,EAAAC,EAAAF,EACEG,UAAWL,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmCXM,GAAI,qBAAAC,IAAA,SAAAC,EAAAC,EAAAR,GAAA,aAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,QAAAS,EAAAT,EAAA,IAAAU,GAAAV,EAAA,KAAAA,EAAA,IClFNW,EAAAX,EAAA,GAqDAC,OAAAS,EAAAP,EAAAF,EACEG,UAAWO,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;EA2BXN,GAAI,kBACJO,WAAYH,EAAAN,MAAAU,IAAA,SAAAN,EAAAC,EAAAR,GAAA,aAAAA,EAAAc,EAAAN,GAAAR,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,SAAAe,EAAAf,EAAA,GAAAgB,EAAAhB,EAAA,GAAAiB,GAAAjB,EAAA,KAAAA,EAAA,KAAAA,EAAA,KCsIdkB,eAAeC,OAAO,uCAlMYlB,OAAAgB,EAAAd,EAkMZ,CAlM0Ba,EAAAb,IAC9CiB,sBACE,OAAOL,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAkHTM,wBACE,OACEC,KAAMrB,OACNsB,OAAQC,QACRC,SAAUD,QACVE,UAAWF,QACXG,OACEC,KAAMC,MACNC,WAKNC,oBACEC,MAAMD,oBACNE,KAAKC,WAAaD,KAAKC,WAAWC,KAAKF,MAEvCA,KAAKX,KAAKc,WAAWC,gBAAgBJ,KAAKC,WAAY,yBACnDI,KAAK,SAAUC,GAASN,KAAKO,aAAeD,GAASJ,KAAKF,OAC7DA,KAAKC,aAGPO,uBACET,MAAMS,uBACFR,KAAKO,cAAcP,KAAKO,eAG9BN,aACED,KAAKX,KAAKoB,QAAQ,MAAO,iBACtBJ,KAAK,SAAUX,GACdA,EAAMgB,UACNV,KAAKN,MAAQA,GACbQ,KAAKF,OAGXW,oBAAoBC,GAClBA,EAAGC,kBACHb,KAAKX,KAAKoB,QAAQ,OAAQ,sBAAwBG,EAAGE,MAAMC,KAAKC,IAC9DC,SAAUL,EAAGM,OAAOC,UACnBC,MAAM,IAAMpB,KAAKC,cAGtBoB,SAAST,GACPZ,KAAKX,KAAKoB,QAAQ,OAAQ,sBACxBa,KAAMtB,KAAKuB,EAAEC,OAAO3B,QACnBuB,MAAM,IAAMpB,KAAKC,cACpBD,KAAKuB,EAAEC,OAAO3B,MAAQ,GAElBe,GACFa,WAAW,IAAMzB,KAAKuB,EAAEC,OAAOE,QAAS,IAI5CC,aAAaf,GACQ,KAAfA,EAAGgB,SACL5B,KAAKqB,WAITQ,UAAUjB,GACR,MAAMkB,MAAEA,EAAFf,KAASA,GAASH,EAAGE,MACrBQ,EAAOV,EAAGM,OAAOrB,MAEnByB,IAASP,EAAKO,OAIlBtB,KAAK+B,KAAK,QAASD,EAAO,QAASR,GACnCtB,KAAKX,KAAKoB,QAAQ,OAAQ,sBAAwBM,EAAKC,IACrDM,KAAMA,IACLF,MAAM,IAAMpB,KAAKC,eAGtB+B,kBACEhC,KAAKX,KAAKoB,QAAQ,OAAQ","file":"97b2f64d8ea12948265d.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two- or\nthree- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text styling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height`   | Minimum height of a two-line item          | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item        | `88px`\n`--paper-item-body-secondary-color`       | Foreground color for the `secondary` area  | `--secondary-text-color`\n`--paper-item-body-secondary`             | Mixin applied to the `secondary` area      | `{}`\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an interactive list\nitem with a fixed-width icon area, according to Material Design. This is useful if the icons are of\nvarying widths, but you want the item bodies to line up. Use this like a `<paper-item>`. The child\nnode with the slot name `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property               | Description                                    | Default\n------------------------------|------------------------------------------------|----------\n`--paper-item-icon-width`     | Width of the icon area                         | `56px`\n`--paper-item-icon`           | Mixin applied to the icon area                 | `{}`\n`--paper-icon-item`           | Mixin applied to the item                      | `{}`\n`--paper-item-selected-weight`| The font weight of a selected item             | `bold`\n`--paper-item-selected`       | Mixin applied to selected paper-items                | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items             | `--disabled-text-color`\n`--paper-item-disabled`       | Mixin applied to disabled paper-items        | `{}`\n`--paper-item-focused`        | Mixin applied to focused paper-items         | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport { PaperItemBehavior } from './paper-item-behavior.js';\nimport './paper-item-shared-styles.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-checkbox/paper-checkbox.js';\nimport '@polymer/paper-icon-button/paper-icon-button.js';\nimport '@polymer/paper-input/paper-input.js';\nimport '@polymer/paper-item/paper-icon-item.js';\nimport '@polymer/paper-item/paper-item-body.js';\nimport '@polymer/paper-item/paper-item.js';\nimport '@polymer/paper-listbox/paper-listbox.js';\nimport '@polymer/paper-menu-button/paper-menu-button.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/ha-menu-button.js';\nimport '../../components/ha-start-voice-button.js';\nimport LocalizeMixin from '../../mixins/localize-mixin.js';\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPanelShoppingList extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      :host {\n        height: 100%;\n      }\n      app-toolbar paper-listbox {\n        width: 150px;\n      }\n      app-toolbar paper-item {\n        cursor: pointer;\n      }\n      .content {\n        padding-bottom: 32px;\n        max-width: 600px;\n        margin: 0 auto;\n      }\n      paper-card {\n        display: block;\n      }\n      paper-icon-item {\n        border-top: 1px solid var(--divider-color);\n      }\n      paper-icon-item:first-child {\n        border-top: 0;\n      }\n      paper-checkbox {\n        padding: 11px;\n      }\n      paper-input {\n        --paper-input-container-underline: {\n          display: none;\n        }\n        --paper-input-container-underline-focus: {\n          display: none;\n        }\n        position: relative;\n        top: 1px;\n      }\n      .tip {\n        padding: 24px;\n        text-align: center;\n        color: var(--secondary-text-color);\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>[[localize('panel.shopping_list')]]</div>\n          <ha-start-voice-button hass='[[hass]]' can-listen='{{canListen}}'></ha-start-voice-button>\n          <paper-menu-button\n            horizontal-align=\"right\"\n            horizontal-offset=\"-5\"\n            vertical-offset=\"-5\"\n          >\n            <paper-icon-button\n              icon=\"hass:dots-vertical\"\n              slot=\"dropdown-trigger\"\n            ></paper-icon-button>\n            <paper-listbox slot=\"dropdown-content\">\n              <paper-item\n                on-click=\"_clearCompleted\"\n              >[[localize('ui.panel.shopping-list.clear_completed')]]</paper-item>\n            </paper-listbox>\n          </paper-menu-button>\n        </app-toolbar>\n      </app-header>\n\n      <div class='content'>\n        <paper-card>\n          <paper-icon-item on-focus='_focusRowInput'>\n            <paper-icon-button\n              slot=\"item-icon\"\n              icon=\"hass:plus\"\n              on-click='_addItem'\n            ></paper-icon-button>\n            <paper-item-body>\n              <paper-input\n                id='addBox'\n                placeholder=\"[[localize('ui.panel.shopping-list.add_item')]]\"\n                on-keydown='_addKeyPress'\n                no-label-float\n              ></paper-input>\n            </paper-item-body>\n          </paper-icon-item>\n\n          <template is='dom-repeat' items='[[items]]'>\n            <paper-icon-item>\n                <paper-checkbox\n                  slot=\"item-icon\"\n                  checked='{{item.complete}}'\n                  on-click='_itemCompleteTapped'\n                  tabindex='0'\n                ></paper-checkbox>\n              <paper-item-body>\n                <paper-input\n                  id='editBox'\n                  no-label-float\n                  value='[[item.name]]'\n                  on-change='_saveEdit'\n                ></paper-input>\n              </paper-item-body>\n            </paper-icon-item>\n          </template>\n        </paper-card>\n        <div class='tip' hidden$='[[!canListen]]'>\n          [[localize('ui.panel.shopping-list.microphone_tip')]]\n        </div>\n      </div>\n    </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n      canListen: Boolean,\n      items: {\n        type: Array,\n        value: [],\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._fetchData = this._fetchData.bind(this);\n\n    this.hass.connection.subscribeEvents(this._fetchData, 'shopping_list_updated')\n      .then(function (unsub) { this._unsubEvents = unsub; }.bind(this));\n    this._fetchData();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubEvents) this._unsubEvents();\n  }\n\n  _fetchData() {\n    this.hass.callApi('get', 'shopping_list')\n      .then(function (items) {\n        items.reverse();\n        this.items = items;\n      }.bind(this));\n  }\n\n  _itemCompleteTapped(ev) {\n    ev.stopPropagation();\n    this.hass.callApi('post', 'shopping_list/item/' + ev.model.item.id, {\n      complete: ev.target.checked\n    }).catch(() => this._fetchData());\n  }\n\n  _addItem(ev) {\n    this.hass.callApi('post', 'shopping_list/item', {\n      name: this.$.addBox.value,\n    }).catch(() => this._fetchData());\n    this.$.addBox.value = '';\n    // Presence of 'ev' means tap on \"add\" button.\n    if (ev) {\n      setTimeout(() => this.$.addBox.focus(), 10);\n    }\n  }\n\n  _addKeyPress(ev) {\n    if (ev.keyCode === 13) {\n      this._addItem();\n    }\n  }\n\n  _saveEdit(ev) {\n    const { index, item } = ev.model;\n    const name = ev.target.value;\n\n    if (name === item.name) {\n      return;\n    }\n\n    this.set(['items', index, 'name'], name);\n    this.hass.callApi('post', 'shopping_list/item/' + item.id, {\n      name: name\n    }).catch(() => this._fetchData());\n  }\n\n  _clearCompleted() {\n    this.hass.callApi('POST', 'shopping_list/clear_completed');\n  }\n}\n\ncustomElements.define('ha-panel-shopping-list', HaPanelShoppingList);\n"],"sourceRoot":""}